{"version":3,"sources":["webpack://ng-virtual-keyboard/webpack/universalModuleDefinition","webpack://ng-virtual-keyboard/webpack/bootstrap","webpack://ng-virtual-keyboard/external \"@angular/core\"","webpack://ng-virtual-keyboard/external \"@angular/material\"","webpack://ng-virtual-keyboard/./src/layouts.ts","webpack://ng-virtual-keyboard/./src/virtual-keyboard.directive.ts","webpack://ng-virtual-keyboard/./src/virtual-keyboard.component.ts","webpack://ng-virtual-keyboard/./src/virtual-keyboard.service.ts","webpack://ng-virtual-keyboard/./src/index.ts","webpack://ng-virtual-keyboard/external \"rxjs/internal/ReplaySubject\"","webpack://ng-virtual-keyboard/./src/virtual-keyboard.module.ts","webpack://ng-virtual-keyboard/external \"@angular/common\"","webpack://ng-virtual-keyboard/external \"@angular/forms\"","webpack://ng-virtual-keyboard/external \"@angular/flex-layout\"","webpack://ng-virtual-keyboard/./src/virtual-keyboard-key.component.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__11__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isSpecial","length","specialKeys","filter","specialKey","RegExp","test","alphanumericKeyboard","alphanumericNordicKeyboard","extendedKeyboard","extendedNordicKeyboard","numericKeyboard","phoneKeyboard","specialKeyIcons","Enter","Backspace","Escape","SpaceBar","Shift","specialKeyTexts","CapsLock","notDisabledSpecialKeys","layout","caps","map","row","toUpperCase","toLowerCase","element","dialog","opened","focus","onWindowBlur","this","onWindowFocus","setTimeout","onFocus","openKeyboard","onClick","dialogRef","open","VirtualKeyboardComponent","componentInstance","inputElement","getLayout","placeholder","getPlaceHolder","type","getType","afterClosed","subscribe","nativeElement","Input","HostListener","NgVirtualKeyboardDirective","Directive","selector","ElementRef","MatDialog","virtualKeyboardService","shift","setSelectionRange","input","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","ngOnInit","keyboardInput","shift$","capsLock$","capsLock","keyboardCapsLockLayout","caretPosition$","caretPosition","setCaretPosition","maxLength","checkDisabled","ngOnDestroy","reset","close","updateCaretPosition","selectionStart","keyPress","event","special","handleSpecialKey","handleNormalKey","keyValue","dispatchEvents","toggleShift","valueLength","disabled","isNaN","slice","join","currentValue","substring","toggleCapsLock","eventInit","bubbles","cancelable","shiftKey","code","location","dispatchEvent","KeyboardEvent","Event","ViewChild","static","Component","template","styles","MatDialogRef","VirtualKeyboardService","ReplaySubject","setShift","next","setCapsLock","position","Injectable","NgVirtualKeyboardModule","NgModule","declarations","VirtualKeyboardKeyComponent","providers","imports","CommonModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","MatButtonModule","MatDialogModule","MatIconModule","MatInputModule","entryComponents","EventEmitter","spacer","multiplier","fix","isSpacer","matches","exec","parseFloat","icon","text","flexValue","isDisabled","indexOf","onKeyPress","emit","Output"],"mappings":"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","file":"ng-virtual-keyboard.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/material\"), require(\"rxjs/internal/ReplaySubject\"), require(\"@angular/common\"), require(\"@angular/forms\"), require(\"@angular/flex-layout\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/material\", \"rxjs/internal/ReplaySubject\", \"@angular/common\", \"@angular/forms\", \"@angular/flex-layout\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-virtual-keyboard\"] = factory(require(\"@angular/core\"), require(\"@angular/material\"), require(\"rxjs/internal/ReplaySubject\"), require(\"@angular/common\"), require(\"@angular/forms\"), require(\"@angular/flex-layout\"));\n\telse\n\t\troot[\"ng-virtual-keyboard\"] = factory(root[\"@angular/core\"], root[\"@angular/material\"], root[\"rxjs/internal/ReplaySubject\"], root[\"@angular/common\"], root[\"@angular/forms\"], root[\"@angular/flex-layout\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__11__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export type KeyboardLayout = Array<Array<string>>;\n\nexport const alphanumericKeyboard: KeyboardLayout = [\n  ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:2'],\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'CapsLock:2'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer', 'Shift:2'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm', 'Spacer:5'],\n];\n\nexport const alphanumericNordicKeyboard: KeyboardLayout = [\n  ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Spacer', 'Backspace:2'],\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'å', 'CapsLock:2'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', 'Shift:2'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm', 'Spacer:6'],\n];\n\nexport const extendedKeyboard: KeyboardLayout = [\n  ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:2'],\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'CapsLock:2'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer', 'Shift:2'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '_', '+'],\n  ['Spacer', '@', 'SpaceBar:7', '#', 'Spacer:2'],\n];\n\nexport const extendedNordicKeyboard: KeyboardLayout = [\n  ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '+', 'Backspace:2'],\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'å', 'CapsLock:2'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', 'Shift:2'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '_', 'Spacer:2'],\n  ['Spacer', '@', 'SpaceBar:7', '#', 'Spacer:3'],\n];\n\nexport const numericKeyboard: KeyboardLayout = [\n  ['1', '2', '3', 'Backspace:2'],\n  ['4', '5', '6', 'Spacer:2'],\n  ['7', '8', '9', 'Spacer:2'],\n  ['Spacer', '0', 'Spacer:3'],\n];\n\nexport const phoneKeyboard: KeyboardLayout = [\n  ['1', '2', '3', 'Backspace:2'],\n  ['4', '5', '6', 'Spacer:2'],\n  ['7', '8', '9', 'Spacer:2'],\n  ['-', '0', '+', 'Spacer:2'],\n];\n\nexport const specialKeys: Array<string> = [\n  'Enter',\n  'Backspace',\n  'Escape',\n  'CapsLock',\n  'SpaceBar',\n  'Spacer',\n  'Shift',\n];\n\nexport const specialKeyIcons = {\n  Enter: 'keyboard_return',\n  Backspace: 'backspace',\n  Escape: 'close',\n  SpaceBar: 'space_bar',\n  Shift: 'keyboard_capslock'\n};\n\nexport const specialKeyTexts = {\n  CapsLock: 'Caps'\n};\n\nexport const notDisabledSpecialKeys = [\n  'Enter',\n  'Backspace',\n  'Escape',\n];\n\n/**\n * Helper function to determine if given key is 'Spacer' or not.\n *\n * @param {string}  key\n * @returns {boolean}\n */\nexport function isSpacer(key: string): boolean {\n  if (key.length > 1) {\n    return /^Spacer(:(\\d+(\\.\\d+)?))?$/g.test(key);\n  }\n\n  return false;\n}\n\n/**\n * Helper function to determine if given key is special or not.\n *\n * @param {string}  key\n * @returns {boolean}\n */\nexport function isSpecial(key: string): boolean {\n  if (key.length > 1) {\n    return !!specialKeys.filter(specialKey => {\n      const pattern = new RegExp(`^(${specialKey})(:(\\\\d+(\\\\.\\\\d+)?))?$`, 'g');\n\n      return pattern.test(key);\n    }).length;\n  }\n\n  return false;\n}\n\n/**\n * Function to change specified layout to CapsLock layout.\n *\n * @param {KeyboardLayout}  layout\n * @param {boolean}         caps\n * @returns {KeyboardLayout}\n */\nexport function keyboardCapsLockLayout(layout: KeyboardLayout, caps: boolean): KeyboardLayout {\n  return layout.map((row: Array<string>): Array<string> => {\n    return row.map((key: string): string => {\n      return isSpecial(key) ? key : (caps ? key.toUpperCase() : key.toLowerCase());\n    });\n  });\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport {\n  alphanumericKeyboard,\n  alphanumericNordicKeyboard,\n  extendedKeyboard,\n  extendedNordicKeyboard,\n  KeyboardLayout,\n  numericKeyboard,\n  phoneKeyboard\n} from './layouts';\n\n@Directive({\n  selector: '[ng-virtual-keyboard]'\n})\n\nexport class NgVirtualKeyboardDirective {\n  private opened = false;\n  private focus = true;\n\n  @Input('ng-virtual-keyboard-layout') layout: KeyboardLayout|string;\n  @Input('ng-virtual-keyboard-placeholder') placeholder: string;\n  @Input('ng-virtual-keyboard-type') type: string;\n\n  @HostListener('window:blur')\n  onWindowBlur() {\n    this.focus = false;\n  }\n\n  @HostListener('window:focus')\n  onWindowFocus() {\n    setTimeout(() => {\n      this.focus = true;\n    }, 0);\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this.openKeyboard();\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.openKeyboard();\n  }\n\n  /**\n   * Constructor of the class.\n   *\n   * @param {ElementRef}  element\n   * @param {MatDialog}    dialog\n   */\n  public constructor(\n    private element: ElementRef,\n    private dialog: MatDialog,\n  ) { }\n\n  /**\n   * Method to open virtual keyboard\n   */\n  private openKeyboard() {\n    if (!this.opened && this.focus) {\n      this.opened = true;\n\n      let dialogRef: MatDialogRef<VirtualKeyboardComponent>;\n\n      dialogRef = this.dialog.open(VirtualKeyboardComponent);\n      dialogRef.componentInstance.inputElement = this.element;\n      dialogRef.componentInstance.layout = this.getLayout();\n      dialogRef.componentInstance.placeholder = this.getPlaceHolder();\n      dialogRef.componentInstance.type = this.getType();\n\n      dialogRef\n        .afterClosed()\n        .subscribe(() => {\n          setTimeout(() => {\n            this.opened = false;\n          }, 0);\n        });\n    }\n  }\n\n  /**\n   * Getter for used keyboard layout.\n   *\n   * @returns {KeyboardLayout}\n   */\n  private getLayout(): KeyboardLayout {\n    let layout;\n\n    switch (this.layout) {\n      case 'alphanumeric':\n        layout = alphanumericKeyboard;\n        break;\n      case 'alphanumericNordic':\n        layout = alphanumericNordicKeyboard;\n        break;\n      case 'extended':\n        layout = extendedKeyboard;\n        break;\n      case 'extendedNordic':\n        layout = extendedNordicKeyboard;\n        break;\n      case 'numeric':\n        layout = numericKeyboard;\n        break;\n      case 'phone':\n        layout = phoneKeyboard;\n        break;\n      default:\n        layout = this.layout;\n        break;\n    }\n\n    return layout;\n  }\n\n  /**\n   * Getter for used placeholder for virtual keyboard input field.\n   *\n   * @returns {string}\n   */\n  private getPlaceHolder(): string {\n    return this.placeholder ? this.placeholder : this.element.nativeElement.placeholder;\n  }\n\n  /**\n   * Getter for used type for virtual keyboard input field.\n   * \n   * @return {string}\n   */\n  private getType(): string {\n    return this.type ? this.type : this.element.nativeElement.type;\n  }\n}\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\nimport { keyboardCapsLockLayout, KeyboardLayout } from './layouts';\nimport { VirtualKeyboardService } from './virtual-keyboard.service';\nimport { KeyPressInterface } from './key-press.interface';\n\n@Component({\n  selector: 'virtual-keyboard',\n  template: `\n    <div class=\"container\">\n      <div fxLayout=\"column\">\n        <mat-form-field>\n          <button class=\"close\" color=\"primary\" mat-button mat-mini-fab\n            (click)=\"close()\"\n          >\n            <mat-icon>check</mat-icon>\n          </button>\n    \n          <input type=\"{{type}}\"\n            matInput\n            #keyboardInput\n            (click)=\"updateCaretPosition()\"\n            [(ngModel)]=\"inputElement.nativeElement.value\" placeholder=\"{{ placeholder }}\"\n            [maxLength]=\"maxLength\"\n          />\n        </mat-form-field>\n    \n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\"\n          *ngFor=\"let row of layout; let rowIndex = index\"\n          [attr.data-index]=\"rowIndex\"\n        >\n          <virtual-keyboard-key\n            *ngFor=\"let key of row; let keyIndex = index\"\n            [key]=\"key\"\n            [disabled]=\"disabled\"\n            [attr.data-index]=\"keyIndex\"\n            (keyPress)=\"keyPress($event)\"\n          ></virtual-keyboard-key>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .close {\n      position: relative;\n      float: right;\n      top: -16px;\n      right: 0;\n      margin-bottom: -40px;\n    }\n  \n    .mat-input-container {\n      margin: -16px 0;\n      font-size: 32px;\n    }\n  \n    .mat-input-element:disabled {\n      color: currentColor;\n    }\n\n    :host /deep/ .mat-input-placeholder {\n      top: 10px !important;\n      font-size: 24px !important;\n    }\n  `]\n})\n\nexport class VirtualKeyboardComponent implements OnInit, OnDestroy {\n  @ViewChild('keyboardInput', {static: false}) keyboardInput: ElementRef;\n\n  public inputElement: ElementRef;\n  public layout: KeyboardLayout;\n  public placeholder: string;\n  public type: string;\n  public disabled: boolean;\n  public maxLength: number|string;\n\n  private caretPosition: number;\n  private shift = false;\n\n  /**\n   * Helper method to set cursor in input to correct place.\n   *\n   * @param {HTMLInputElement|HTMLTextAreaElement}  input\n   * @param {number}                                start\n   * @param {number}                                end\n   */\n  private static setSelectionRange(\n    input: any,\n    start: number,\n    end: number\n  ): void {\n    if (input.setSelectionRange) {\n      input.focus();\n      input.setSelectionRange(start, end);\n\n    } else if (input.createTextRange) {\n      const range = input.createTextRange();\n\n      range.collapse(true);\n      range.moveEnd('character', end);\n      range.moveStart('character', start);\n      range.select();\n    }\n  }\n\n  /**\n   * Constructor of the class.\n   *\n   * @param {MatDialogRef<VirtualKeyboardComponent>} dialogRef\n   * @param {VirtualKeyboardService}                 virtualKeyboardService\n   */\n  public constructor(\n    public dialogRef: MatDialogRef<VirtualKeyboardComponent>,\n    private virtualKeyboardService: VirtualKeyboardService\n  ) { }\n\n  /**\n   * On init life cycle hook, this will do following:\n   *  1) Set focus to virtual keyboard input field\n   *  2) Subscribe to following\n   *    2.1) Shift key, this is needed in keyboard event dispatches\n   *    2.2) CapsLock key, this will change keyboard layout\n   *    2.3) Caret position in virtual keyboard input\n   *  3) Reset of possible previously tracked caret position\n   */\n  public ngOnInit(): void {\n    setTimeout(() => {\n      this.keyboardInput.nativeElement.focus();\n    }, 0);\n\n    this.virtualKeyboardService.shift$.subscribe((shift: boolean) => {\n      this.shift = shift;\n    });\n\n    this.virtualKeyboardService.capsLock$.subscribe((capsLock: boolean) => {\n      this.layout = keyboardCapsLockLayout(this.layout, capsLock);\n    });\n\n    this.virtualKeyboardService.caretPosition$.subscribe((caretPosition: number) => {\n      this.caretPosition = caretPosition;\n\n      setTimeout(() => {\n        VirtualKeyboardComponent.setSelectionRange(this.keyboardInput.nativeElement, caretPosition, caretPosition);\n      }, 0);\n    });\n\n    if (this.inputElement.nativeElement.value.length) {\n      this.virtualKeyboardService.setCaretPosition(this.inputElement.nativeElement.value.length);\n    }\n\n    this.maxLength = this.inputElement.nativeElement.maxLength > 0 ? this.inputElement.nativeElement.maxLength : '';\n\n    this.checkDisabled();\n  }\n\n  /**\n   * On destroy life cycle hook, in this we want to reset virtual keyboard service states on following:\n   *  - Shift\n   *  - CapsLock\n   */\n  public ngOnDestroy(): void {\n    this.virtualKeyboardService.reset();\n  }\n\n  /**\n   * Method to close virtual keyboard dialog\n   */\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Method to update caret position. This is called on click event in virtual keyboard input element.\n   */\n  public updateCaretPosition(): void {\n    this.virtualKeyboardService.setCaretPosition(this.keyboardInput.nativeElement.selectionStart);\n  }\n\n  /**\n   * Method to handle actual \"key\" press from virtual keyboard.\n   *  1) Key is \"Special\", process special key event\n   *  2) Key is \"Normal\"\n   *    - Append this key value to input\n   *    - Dispatch DOM events to input element\n   *    - Toggle Shift key if it's pressed\n   *\n   * @param {KeyPressInterface} event\n   */\n  public keyPress(event: KeyPressInterface): void {\n    if (event.special) {\n      this.handleSpecialKey(event);\n    } else {\n      this.handleNormalKey(event.keyValue);\n\n      this.dispatchEvents(event);\n\n      // Toggle shift if it's activated\n      if (this.shift) {\n        this.virtualKeyboardService.toggleShift();\n      }\n    }\n\n    this.checkDisabled();\n  }\n\n  /**\n   * Method to check is virtual keyboard input is disabled.\n   */\n  private checkDisabled(): void {\n    const maxLength = this.inputElement.nativeElement.maxLength;\n    const valueLength = this.inputElement.nativeElement.value.length;\n\n    this.disabled = maxLength > 0 && valueLength >= maxLength;\n  }\n\n  /**\n   * Method to handle \"normal\" key press event, this will add specified character to input value.\n   *\n   * @param {string}  keyValue\n   */\n  private handleNormalKey(keyValue: string): void {\n    let value = '';\n\n    // We have caret position, so attach character to specified position\n    if (!isNaN(this.caretPosition)) {\n      value = [\n        this.inputElement.nativeElement.value.slice(0, this.caretPosition),\n        keyValue,\n        this.inputElement.nativeElement.value.slice(this.caretPosition)\n      ].join('');\n\n      // Update caret position\n      this.virtualKeyboardService.setCaretPosition(this.caretPosition + 1);\n    } else {\n      value = `${this.inputElement.nativeElement.value}${keyValue}`;\n    }\n\n    // And finally set new value to input\n    this.inputElement.nativeElement.value = value;\n  }\n\n  /**\n   * Method to handle \"Special\" key press events.\n   *  1) Enter\n   *  2) Escape, close virtual keyboard\n   *  3) Backspace, remove last character from input value\n   *  4) CapsLock, toggle current layout state\n   *  6) Shift, toggle current layout state\n   *  5) SpaceBar\n   */\n  private handleSpecialKey(event: KeyPressInterface): void {\n    switch (event.keyValue) {\n      case 'Enter':\n        this.close();\n        break;\n      case 'Escape':\n        this.close();\n        break;\n      case 'Backspace':\n        const currentValue = this.inputElement.nativeElement.value;\n\n        // We have a caret position, so we need to remove char from that position\n        if (!isNaN(this.caretPosition)) {\n          // And current position must > 0\n          if (this.caretPosition > 0) {\n            const start = currentValue.slice(0, this.caretPosition - 1);\n            const end = currentValue.slice(this.caretPosition);\n\n            this.inputElement.nativeElement.value = `${start}${end}`;\n\n            // Update caret position\n            this.virtualKeyboardService.setCaretPosition(this.caretPosition - 1);\n          }\n        } else {\n          this.inputElement.nativeElement.value = currentValue.substring(0, currentValue.length - 1);\n        }\n\n        // Set focus to keyboard input\n        this.keyboardInput.nativeElement.focus();\n        break;\n      case 'CapsLock':\n        this.virtualKeyboardService.toggleCapsLock();\n        break;\n      case 'Shift':\n        this.virtualKeyboardService.toggleShift();\n        break;\n      case 'SpaceBar':\n        this.handleNormalKey(' ');\n        break;\n    }\n  }\n\n  /**\n   * Method to dispatch necessary keyboard events to current input element.\n   *\n   * @see https://w3c.github.io/uievents/tools/key-event-viewer.html\n   *\n   * @param {KeyPressInterface} event\n   */\n  private dispatchEvents(event: KeyPressInterface) {\n    const eventInit: KeyboardEventInit = {\n      bubbles: true,\n      cancelable: true,\n      shiftKey: this.shift,\n      key: event.keyValue,\n      code: `Key${event.keyValue.toUpperCase()}}`,\n      location: 0\n    };\n\n    // Simulate all needed events on base element\n    this.inputElement.nativeElement.dispatchEvent(new KeyboardEvent('keydown', eventInit));\n    this.inputElement.nativeElement.dispatchEvent(new KeyboardEvent('keypress', eventInit));\n    this.inputElement.nativeElement.dispatchEvent(new Event('input', {bubbles : true}));\n    this.inputElement.nativeElement.dispatchEvent(new KeyboardEvent('keyup', eventInit));\n\n    // And set focus to input\n    this.keyboardInput.nativeElement.focus();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject} from \"rxjs/internal/ReplaySubject\";\n\n@Injectable()\nexport class VirtualKeyboardService {\n  public shift$: ReplaySubject<boolean> = new ReplaySubject(1);\n  public capsLock$: ReplaySubject<boolean> = new ReplaySubject(1);\n  public caretPosition$: ReplaySubject<number> = new ReplaySubject(1);\n\n  private capsLock = false;\n  private shift = false;\n\n  /**\n   * Setter for Shift value, note that this also sets CapsLock value.\n   *\n   * @param {boolean} value\n   */\n  public setShift(value: boolean) {\n    this.shift = value;\n    this.shift$.next(this.shift);\n\n    this.setCapsLock(this.shift);\n  }\n\n  /**\n   * Setter for CapsLock value\n   *\n   * @param {boolean} value\n   */\n  public setCapsLock(value: boolean) {\n    this.capsLock = value;\n    this.capsLock$.next(value);\n  }\n\n  /**\n   * Toggle for Shift, note that this also toggles CapsLock\n   */\n  public toggleShift(): void {\n    this.shift = !this.shift;\n    this.shift$.next(this.shift);\n\n    this.setCapsLock(this.shift);\n  }\n\n  /**\n   * Toggle for CapsLock\n   */\n  public toggleCapsLock() {\n    this.capsLock = !this.capsLock;\n    this.capsLock$.next(this.capsLock);\n  }\n\n  /**\n   * Setter for caret position value.\n   *\n   * @param {number}  position\n   */\n  public setCaretPosition(position: number) {\n    this.caretPosition$.next(position);\n  }\n\n  /**\n   * Method to reset Shift and CapsLock values to default ones.\n   */\n  public reset() {\n    this.setShift(false);\n  }\n}\n","import { NgVirtualKeyboardDirective } from './virtual-keyboard.directive';\nimport { NgVirtualKeyboardModule } from './virtual-keyboard.module';\n\nexport {\n  NgVirtualKeyboardDirective,\n  NgVirtualKeyboardModule\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDialogModule, MatIconModule, MatInputModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { NgVirtualKeyboardDirective } from './virtual-keyboard.directive';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { VirtualKeyboardKeyComponent } from './virtual-keyboard-key.component';\nimport { VirtualKeyboardService } from './virtual-keyboard.service';\n\n@NgModule({\n  declarations: [\n    NgVirtualKeyboardDirective,\n    VirtualKeyboardComponent,\n    VirtualKeyboardKeyComponent,\n  ],\n  providers: [\n    VirtualKeyboardService,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  entryComponents: [\n    VirtualKeyboardComponent,\n  ],\n  exports: [\n    NgVirtualKeyboardDirective,\n  ]\n})\n\nexport class NgVirtualKeyboardModule { }\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\nimport { KeyPressInterface } from './key-press.interface';\nimport { isSpacer, isSpecial, notDisabledSpecialKeys, specialKeyIcons, specialKeyTexts } from './layouts';\n\n@Component({\n  selector: 'virtual-keyboard-key',\n  template: `\n    <button\n      mat-raised-button\n      color=\"primary\"\n      fxFlex=\"{{ flexValue }}\"\n      [class.spacer]=\"spacer\"\n      [disabled]=\"isDisabled()\"\n      (click)=\"onKeyPress()\"\n    >\n      <span *ngIf=\"!special\">{{ keyValue }}</span>\n    \n      <span *ngIf=\"special\">\n        <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n    \n        {{ text }}\n      </span>\n    </button>\n  `,\n  styles: [`\n    .mat-button,\n    .mat-icon-button,\n    .mat-raised-button {\n      min-width: 64px;\n      min-height: 64px;\n      padding: 0;\n      margin: 2px;\n      font-size: 32px;\n      line-height: 32px;\n    }\n    \n    .mat-button.spacer,\n    .mat-icon-button.spacer,\n    .mat-raised-button.spacer {\n      background-color: transparent;\n    }\n  `]\n})\n\nexport class VirtualKeyboardKeyComponent implements OnInit {\n  @Input() key: string;\n  @Input() disabled: boolean;\n  @Output() keyPress = new EventEmitter<KeyPressInterface>();\n\n  public special = false;\n  public spacer = false;\n  public flexValue: string;\n  public keyValue: string;\n  public icon: string;\n  public text: string;\n\n  /**\n   * Constructor of the class.\n   */\n  public constructor() { }\n\n  /**\n   * On init life cycle hook, within this we'll initialize following properties:\n   *  - special\n   *  - keyValue\n   *  - flexValue\n   */\n  public ngOnInit(): void {\n    let multiplier = 1;\n    let fix = 0;\n\n    if (this.key.length > 1) {\n      this.spacer = isSpacer(this.key);\n      this.special = isSpecial(this.key);\n\n      const matches = /^(\\w+)(:(\\d+(\\.\\d+)?))?$/g.exec(this.key);\n\n      this.keyValue = matches[1];\n\n      if (matches[3]) {\n        multiplier = parseFloat(matches[3]);\n        fix = (multiplier - 1) * 4;\n      }\n    } else {\n      this.keyValue = this.key;\n    }\n\n    if (this.special) {\n      if (specialKeyIcons.hasOwnProperty(this.keyValue)) {\n        this.icon = specialKeyIcons[this.keyValue];\n      } else if (specialKeyTexts.hasOwnProperty(this.keyValue)) {\n        this.text = specialKeyTexts[this.keyValue];\n      }\n    }\n\n    this.flexValue = `${multiplier * 64 + fix}px`;\n  }\n\n  /**\n   * Method to check if key is disabled or not.\n   *\n   * @returns {boolean}\n   */\n  public isDisabled(): boolean {\n    if (this.spacer) {\n      return true;\n    } else if (this.disabled && notDisabledSpecialKeys.indexOf(this.keyValue) !== -1) {\n      return false;\n    } else {\n      return this.disabled;\n    }\n  }\n\n  /**\n   * Method to handle actual \"key\" press from virtual keyboard.\n   *  1) Key is \"Special\", process special key event\n   *  2) Key is \"Normal\", append this key value to input\n   */\n  public onKeyPress(): void {\n    this.keyPress.emit({special: this.special, keyValue: this.keyValue, key: this.key});\n  }\n}\n"],"sourceRoot":""}